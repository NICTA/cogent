# Travis-CI configuration for Cogent.
#
# Resources to spelunk to understand how this all works:
#  * <https://docs.travis-ci.com/user/languages/haskell/>
#  * <https://docs.haskellstack.org/en/stable/travis_ci/>

group:    edge                  # <dev|edge|stable>
os:       linux                 # <linux|osx|windows|linux-ppc64le>
dist:     bionic                # <bionic|xenial|trusty|precise>
language: shell                 # no explicit toolchain, please

# Cache dependency artefacts.
cache:
  directories:
    - $HOME/.ghc
    - $HOME/.cabal
    - $HOME/.stack
    - $HOME/objects
    - $REPO/isa-parser/.stack-work
    - $REPO/cogent/.stack-work
    - $REPO/minigent/.stack-work

git:
  submodules: false

env:
  global:
    - REPO=$TRAVIS_BUILD_DIR
    - TRAVIS_BUILD_APT_RETRIES_PERCENTAGE=100
    - OBJECT_DIR=$HOME/objects
    - AUTOCORRES_VERSION=1.6

addons:
  apt:
    packages:
      - z3                      # for arrays
      - libgmp-dev              # for GHC
      - python3-ruamel.yaml     # for test scripts
      - python3-termcolor       # for test scripts
      - libfile-which-perl      # for man-gen
      - linux-headers-$(uname -r) # for ext2fs/bilbyfs

before_install:
  - >-
    [ -d $OBJECT_DIR ] ||
    mkdir -p $OBJECT_DIR

  # Download and unpack the stack executable
  - >-
    mkdir -p ~/.local/bin
  - >-
    export PATH=$HOME/.local/bin:$PATH
  - >-
    travis_retry
    curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz |
    tar -x -z -f - --wildcards --strip-components=1 -C ~/.local/bin '*/stack'

  # Get and unroll AutoCorres
  - >-
    [ -e $OBJECT_DIR/autocorres-${AUTOCORRES_VERSION}.tar.gz ] ||
    travis_retry
    curl -o $OBJECT_DIR/autocorres-${AUTOCORRES_VERSION}.tar.gz
    http://ts.data61.csiro.au/projects/TS/autocorres/autocorres-${AUTOCORRES_VERSION}.tar.gz
  - >-
    tar xf $OBJECT_DIR/autocorres-${AUTOCORRES_VERSION}.tar.gz
  - >-
    mv autocorres-${AUTOCORRES_VERSION} autocorres

  # Work out what flags to set.
  - >-
    STACK_FLAGS=''
  - >-
    [ -z ${WITH_DOCGENT} ] ||
    STACK_FLAGS="${STACK_FLAGS} --flag cogent:docgent"
  - >-
    [ -z ${WITH_HASKELL_BACKEND} ] ||
    STACK_FLAGS="${STACK_FLAGS} --flag cogent:haskell-backend"
  - >-
    [ -z ${WITH_BUILTIN_ARRAYS} ] ||
    STACK_FLAGS="${STACK_FLAGS} --flag cogent:builtin-arrays"

  # Pandoc causes Stack to choke; so, with Docgent enabled, no fish.
  # - <https://github.com/commercialhaskell/stack/issues/3989>
  # - <https://github.com/commercialhaskell/stack/issues/4428>
  #
  # `haskell-src-exts' causes Haddock to choke (by segfaulting?!)
  # - <https://travis-ci.org/NICTA/cogent/jobs/656011492>
  - >-
    if [ -z ${WITH_DOCGENT} ] && [ -z ${WITH_HASKELL_BACKEND} ];
    then
      STACK_FLAGS="${STACK_FLAGS} --haddock --haddock-deps";
    fi

  - >-
    export STACK_FLAGS;
    echo $STACK_FLAGS

install:
  # Build dependencies
  - cd $REPO/cogent
  - stack --no-terminal --install-ghc test --only-dependencies $STACK_FLAGS

jobs:
  fast_finish: true
  include:
    - env: STACK_YAML=stack-8.2.yaml
      compiler: "GHC 8.2.2 + LTS 11.22"
    - env: STACK_YAML=stack-8.2.yaml WITH_DOCGENT=1
      compiler: "GHC 8.2.2 + LTS 11.22"
    - env: STACK_YAML=stack-8.2.yaml WITH_HASKELL_BACKEND=1
      compiler: "GHC 8.2.2 + LTS 11.22"
    - env: STACK_YAML=stack-8.2.yaml WITH_BUILTIN_ARRAYS=1
      compiler: "GHC 8.2.2 + LTS 11.22"

    - env: STACK_YAML=stack-8.4.yaml
      compiler: "GHC 8.4.4 + LTS 12.26"
    - env: STACK_YAML=stack-8.4.yaml WITH_DOCGENT=1
      compiler: "GHC 8.4.4 + LTS 12.26"
    - env: STACK_YAML=stack-8.4.yaml WITH_HASKELL_BACKEND=1
      compiler: "GHC 8.4.4 + LTS 12.26"
    - env: STACK_YAML=stack-8.4.yaml WITH_BUILTIN_ARRAYS=1
      compiler: "GHC 8.4.4 + LTS 12.26"

    - env: STACK_YAML=stack-8.6.yaml
      compiler: "GHC 8.6.5 + LTS 14.22"
    - env: STACK_YAML=stack-8.6.yaml WITH_DOCGENT=1
      compiler: "GHC 8.6.5 + LTS 14.22"
    - env: STACK_YAML=stack-8.6.yaml WITH_HASKELL_BACKEND=1
      compiler: "GHC 8.6.5 + LTS 14.22"
    - env: STACK_YAML=stack-8.6.yaml WITH_BUILTIN_ARRAYS=1
      compiler: "GHC 8.6.5 + LTS 14.22"

    # TODO: add mixtures of feature flags to test combos

  allow_failures:
    # `builtin-arrays' on `master' and derived branches is broken.
    # When Dargent support lands, we can re-enable these.
    - env: STACK_YAML=stack-8.2.yaml WITH_BUILTIN_ARRAYS=1
      compiler: "GHC 8.2.2 + LTS 11.22"
    - env: STACK_YAML=stack-8.4.yaml WITH_BUILTIN_ARRAYS=1
      compiler: "GHC 8.4.4 + LTS 12.26"
    - env: STACK_YAML=stack-8.6.yaml WITH_BUILTIN_ARRAYS=1
      compiler: "GHC 8.6.5 + LTS 14.22"

script:
  # Build the package, its tests, and run the tests
  - cd $REPO/cogent
  - stack --no-terminal test $STACK_FLAGS
  - cogent_bin=$(stack --no-terminal exec -- which cogent)
  - install -m 755 ${cogent_bin} ~/.local/bin

  - which cogent || travis_terminate 1

  - make test-compiler
  - make test-libgum

  - make examples

  - cd $REPO/impl/fs/ext2/cogent  && make linux
  - cd $REPO/impl/fs/bilby/cogent && make .c-gen
  # cd $REPO/impl/fs/bilby/cogent && make linux

notifications:
  slack:
    rooms:
      secure: HFQu8x7qm0lsh5PtVP4DQki2dpBfDaXL0Hp4ocCITFrNtIXX/6Oba3qNAomHfGtUcSiIMl+gPiRl9aFtKGwJT/8znePL6WndTT0vyaS2T/OvYr4joHA6XHRlNjtL4jg/CT1Yqu+Kb9+Njs5xG88MdENQupNkCOKWJfGY5pggUtAdnE5HMJ6jO0u6KRM2rOY8uf2NLABR+2habfYwHgF2RR8fplAzcPv32xikA08Ne70SBmhSYg/ALiSjrmMy1k5gxm46Qeckde12TqsP3xijr06kOiAOo57PZYSmZCwk5La3kRmOf6L+IZc8fSzg7HaDP8Hpk8xnkqvx3Wcq0nZK4LMi4/4OpKLHOHd/MeD3GCy7oyCFMw/+z+LvlbWB/W4QOkCqNsLnSCLnzt+GbV3CZsdVuUtHi34JFssLkbRqdQiYtSUrh0q5mqRyFuOruB8v9s6wiL1Bla7ZMX0qYn6tJYsxurCOdDDgMHV0QitralcFsynhbXcGUjHSinNolBFtUxoyOErlpC6IaFVGS2ch0szFoPCqilYifNl48/8XjBHA52JDKD2tsl+K5PTKyLcLDWwgQePzN2NIThYO3UDs/Gyz68VHgihpMw7XYaRw+T7d/2KQ3FM+/2JeohmDKIJMkupGHZ8m+185ixu8Px6U4GKCh+892c6Lek2fd7VAlHE=
